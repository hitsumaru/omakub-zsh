# Compression
# Better to have aliases with explicit names for clarity
alias targz='tar -czf'
alias untargz='tar -xzf'

# Convert webm to mp4
webm2mp4() {
  input_file="$1"
  output_file="${input_file%.webm}.mp4"
  if [ -z "$1" ]; then
    echo "Usage: webm2mp4 <input_file.webm>"
    return 1
  fi
  ffmpeg -i "$input_file" -c:v libx264 -preset slow -crf 22 -c:a aac -b:a 192k "$output_file"
}

# Write iso file to sd card
iso2sd() {
  if [ $# -ne 2 ]; then
    echo "Usage: iso2sd <input_file.iso> <output_device>"
    echo "Example: iso2sd ~/Downloads/ubuntu.iso /dev/sda"
    echo -e "\nAvailable devices (be careful!):"
    lsblk -d -o NAME,SIZE,VENDOR,MODEL | grep -E '^sd[a-z]'
  else
    echo "WARNING: This command will erase all data on $2."
    read -p "Are you sure you want to proceed? (yes/no): " confirm
    if [ "$confirm" == "yes" ]; then
      sudo dd bs=4M status=progress oflag=sync if="$1" of="$2"
      sudo eject "$2"
      echo "ISO successfully written to $2."
    else
      echo "Operation cancelled."
    fi
  fi
}

# Create a desktop launcher for a web app
web2app() {
  if [ "$#" -ne 3 ]; then
    echo "Usage: web2app <AppName> <AppURL> <IconURL> (IconURL must be in PNG -- use https://dashboardicons.com)"
    return 1
  fi

  local APP_NAME="$1"
  local APP_URL="$2"
  local ICON_URL="$3"
  local BROWSER="google-chrome" # Can be changed to 'brave', 'firefox', etc.
  local ICON_DIR="$HOME/.local/share/applications/icons"
  local DESKTOP_FILE="$HOME/.local/share/applications/${APP_NAME}.desktop"
  local ICON_PATH="${ICON_DIR}/${APP_NAME}.png"

  mkdir -p "$ICON_DIR"

  echo "Downloading icon from $ICON_URL..."
  if ! curl -sL -o "$ICON_PATH" "$ICON_URL"; then
    echo "Error: Failed to download icon."
    return 1
  fi
  echo "Icon downloaded to $ICON_PATH."

  cat > "$DESKTOP_FILE" <<EOF
[Desktop Entry]
Version=1.0
Name=$APP_NAME
Comment=$APP_NAME
Exec=$BROWSER --app="$APP_URL" --name="$APP_NAME"
Terminal=false
Type=Application
Icon=$ICON_PATH
Categories=GTK;
MimeType=text/html;text/xml;application/xhtml_xml;
StartupNotify=true
EOF
  chmod +x "$DESKTOP_FILE"
  echo "Desktop file created at $DESKTOP_FILE."
}

web2app-remove() {
  if [ "$#" -ne 1 ]; then
    echo "Usage: web2app-remove <AppName>"
    return 1
  fi

  local APP_NAME="$1"
  local ICON_DIR="$HOME/.local/share/applications/icons"
  local DESKTOP_FILE="$HOME/.local/share/applications/${APP_NAME}.desktop"
  local ICON_PATH="${ICON_DIR}/${APP_NAME}.png"

  echo "Removing desktop file and icon for $APP_NAME..."
  rm -v "$DESKTOP_FILE" "$ICON_PATH"
}

# Fix external keyboard function keys
alias fix_fkeys='echo 2 | sudo tee /sys/module/hid_apple/parameters/fnmode'

# Fix Spotify window size
# Spotify window is too large on many displays, so fix this by zooming it down
alias fix_spotify_window_size="sudo sed -i 's|^Exec=.*|Exec=spotify --force-device-scale-factor=1.5 %U|' /usr/local/share/applications/spotify.desktop"